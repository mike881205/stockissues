{"version":3,"sources":["utils/API.js","components/Form/index.js","components/Grid/index.js","pages/Login/index.js","pages/Register/index.js","components/Jumbotron/index.js","components/Header/index.js","pages/Home.js","pages/ClientInput/index.js","pages/QuestionInput/index.js","components/AssessSection/index.js","components/AssessQuestion/index.js","pages/Assessment/index.js","components/ClientRow/index.js","pages/Clients/index.js","components/ResultSection/index.js","components/ResultQuestion/index.js","components/ResultResponses/index.js","pages/ClientResults/index.js","pages/Results/index.js","pages/Confirmation/index.js","App.js","index.js"],"names":["user","axios","post","get","username","section","question","firstName","lastName","email","phone","streetAddress","aptUnitNum","city","state","zip","assessor","audit","dwelling","gateCode","ClientId","SectionId","QuestionId","response","observation","comment","Input","type","classes","placeholder","other","className","Label","text","Small","FormGroup","children","FormBtn","rest","Container","fluid","Row","Col","size","split","map","join","Component","Jumbotron","style","height","clear","paddingTop","textAlign","Header","to","src","alt","Home","logout","data-aos","onClick","ClientInput","clientAdded","addClient","event","preventDefault","API","then","res","setState","props","setClient","data","console","log","catch","err","handleInputChange","target","name","value","trim","this","onChange","defaultValue","disabled","selected","error","AssessSection","checked","notApplicable","showNAbox","Fragment","React","AssessQuestion","id","Assessment","sections","resultsSubmitted","buildAssessment","handleSubmit","responses","i","length","clientID","splitName","category","parseInt","push","submission","setResults","onSubmit","key","Questions","ClientRow","getClientInfo","setClientResults","created","Clients","clients","getClients","createdString3","createdAt","year","client","ResultQuestion","ResultResponses","ClientResults","resultsArr","buildClientResults","clientResults","index","Section","Confirmation","redirect","setTimeout","clearTimeout","App","authorized","results","homeActive","isAuthorized","message","AOS","init","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e889d19e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  register: function (user) {\n    return axios.post(\"/api/register\", user);\n  },\n  login: function (user) {\n    return axios.post(\"/api/login\", user);\n  },\n  isAuthorized: function () {\n    return axios.get(\"/api/authorized\");\n  },\n  logout: function () {\n    return axios.get(\"/api/logout\");\n  },\n  availableUN: function (username) {\n    return axios.get(\"/api/user/?username=\" + username);\n  },\n  inputQuestion: function(section, question) {\n    return axios.post(\"/api/inputquestion\", section, question)\n  },\n  addClient: function(firstName, lastName, email, phone, streetAddress, aptUnitNum, city, state, zip, assessor, audit, dwelling, gateCode) {\n    return axios.post(\"/api/addClient\", firstName, lastName, email, phone, streetAddress, aptUnitNum, city, state, zip, assessor, audit, dwelling, gateCode)\n  },\n  getSections: function() {\n    return axios.get(\"/api/getSections\")\n  },\n  getClients: function() {\n    return axios.get(\"/api/getClients\")\n  },\n  submitAssessment: function(ClientId, SectionId, QuestionId, response, observation, comment) {\n    return axios.post(\"/api/submitAssessment\", ClientId, SectionId, QuestionId, response, observation, comment)\n  },\n  getClientResults: function(ClientId) {\n    return axios.get(\"/api/getClientResults/\" + ClientId)\n  },\n  getResultSections: function(SectionId) {\n    return axios.get(\"/api/getResultSections/\" + SectionId)\n  }\n};\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input({ type, classes, placeholder, ...other }) {\n  return <input type={type} className={\"form-control \" + (classes ? classes : \"\")} placeholder={placeholder}\n  {...other} />;\n}\n\nexport function Label({ text }) {\n  return <label> {text} </label>;\n}\n\nexport function Small({ text, classes }) {\n  return <small className={classes}> {text} </small>;\n}\n\nexport function FormGroup({ children }) {\n  return <div className=\"form-group\"> {children} </div>;\n}\n\nexport function FormBtn({text, classes, ...rest}) {\n    return <button className={`btn ${classes}`} {...rest}>{text}</button>;\n}\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, classes, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"} ${classes ? classes : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FormGroup, Input, Label, Small, FormBtn } from \"../../components/Form\";\nimport { Container } from \"../../components/Grid\";\nimport API from \"../../utils/API\";\nimport \"./style.css\";\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  login = event => {\n    event.preventDefault();\n    API.login({\n      username: this.state.username.toLowerCase(),\n      password: this.state.password\n    })\n      .then(res => {\n        if (res.status && res.status === 200 && !res.data.errors) {\n          console.log(\"login successful\")\n          this.props.isAuthorized();\n        } else {\n          this.setState({\n            error: \"A server error has occured.\"\n          });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        if (err.response.data === \"Unauthorized\") {\n          this.setState({ error: \"Username or password incorrect!\" });\n        } else {\n          this.setState({error: \"A server error has occured.\"});\n        };\n      });\n\n    this.setState({ password: \"\" });\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value.trim()\n    });\n  };\n\n  render() {\n    return (\n      <Container\n        classes=\"loginContainer\"\n      >\n        <form>\n          <FormGroup>\n            <Label text=\"Username\" />\n            <Input\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.handleInputChange}\n              type=\"text\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label text=\"Password\" />\n            <Input\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleInputChange}\n              type=\"password\"\n            />\n          </FormGroup>\n          {this.state.error ? <Small text={this.state.error} /> : \"\"}\n          <FormBtn\n            disabled={\n              this.state.username && this.state.password ? \"\" : \"disabled\"\n            }\n            text=\"Login\"\n            onClick={this.login}\n            classes=\"btn-primary\"\n          />\n          <Link to=\"/register\">Not registered? Click here.</Link>\n        </form>\n      </Container>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FormGroup, Input, Label, Small, FormBtn } from \"../../components/Form\";\nimport { Container } from \"../../components/Grid\";\nimport API from \"../../utils/API\";\nimport \"./style.css\";\n\nclass Register extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirm: \"\",\n    validUN: false,\n    validEM: false,\n    validPW: false,\n    validCF: false,\n    error: \"\",\n    // eslint-disable-next-line\n    reg: new RegExp(\n      /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    )\n  };\n\n  validateField = (name, value) => {\n    switch (name) {\n      case \"username\":\n        if (value.length > 7) {\n          API.availableUN(value.toLowerCase())\n            .then(res => {\n              if (res.data.errors) {\n                console.log(res.data.errors);\n                this.setState({ error: \"An error occured.\" });\n              } else {\n                res.data.length < 1\n                  ? this.setState({ validUN: true })\n                  : this.setState({ validUN: false });\n              };\n            })\n            .catch(err => {\n              console.log(err);\n              this.setState({ error: \"An error occured.\" })\n            });\n        } else {\n          this.setState({ validUN: false });\n        }\n        break;\n      case \"email\":\n        this.setState({ validEM: this.state.reg.test(value) });\n        break;\n      case \"password\":\n        this.setState({\n          validPW: value.length > 7,\n          validCF: value.length > 7 && value === this.state.confirm\n        });\n        break;\n      case \"confirm\":\n        this.setState({\n          validCF: this.state.validPW && this.state.password === value\n        });\n        break;\n      default:\n    }\n  };\n\n  login = (userInfo) => {\n    API.login(userInfo)\n      .then(res => {\n        if (res.status && res.status === 200 && !res.data.errors) {\n          console.log(\"login successful\")\n          this.props.isAuthorized();\n        } else {\n          window.location.href = \"/\";\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        window.location.href = \"/\";\n      });\n  };\n\n  register = event => {\n    event.preventDefault();\n    let userInfo = {\n      username: this.state.username.toLowerCase(),\n      email: this.state.email,\n      password: this.state.password\n    };\n    API.register(userInfo)\n      .then(res => {\n        if (res.data.errors) {\n          console.log(res.data.errors);\n          this.setState({\n            error: \"An error has occured.\"\n          });\n        } else {\n          console.log(\"registration successful\");\n          this.login(userInfo);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ error: \"A server error has occured.\" });\n      });\n\n    this.setState({\n      password: \"\",\n      confirm: \"\"\n    });\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    this.validateField(name, value);\n  };\n\n  render() {\n    return (\n      <Container classes=\"registerContainer\">\n        <form>\n          <FormGroup>\n            <Label text=\"Username\" />\n            <Input\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.handleInputChange}\n              placeholder=\"at least 8 characters\"\n              type=\"text\"\n            />\n            <Small text={this.state.validUN ? \"Username is available\" : \"Username is not available\"} />\n          </FormGroup>\n          <FormGroup>\n            <Label text=\"Email\" />\n            <Input\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleInputChange}\n              placeholder=\"Email\"\n              type=\"email\"\n            />\n            {this.state.validEM ? <Small text=\"Email is valid\" /> : <Small text=\"Email is invalid\" />}\n          </FormGroup>\n          <FormGroup>\n            <Label text=\"Password\" />\n            <Input\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleInputChange}\n              placeholder=\"at least 8 characters\"\n              type=\"password\"\n            />\n            {this.state.validPW ? <Small text=\"Password is valid\" /> : <Small text=\"Password must be at least 8 characters\" />}\n          </FormGroup>\n          <FormGroup>\n            <Label text=\"Confirm Password\" />\n            <Input\n              name=\"confirm\"\n              value={this.state.confirm}\n              onChange={this.handleInputChange}\n              type=\"password\"\n            />\n            {this.state.validCF ? <Small text=\"Passwords match\" /> : <Small text=\"Passwords don't match\" />}\n          </FormGroup>\n          {this.state.error ? <Small text={this.state.error} /> : \"\"}\n\n          <FormGroup>\n            <FormBtn\n              disabled={\n                this.state.validUN && this.state.validEM && this.state.validCF\n                  ? \"\"\n                  : \"disabled\"\n              }\n              text=\"Submit\"\n              onClick={this.register}\n              classes=\"btn-primary\"\n            />\n            <Link to=\"/login\">Already registered? Click here.</Link>\n          </FormGroup>\n        </form>\n      </Container>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport \"./style.css\"\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg d-flex justify-content-center\">\r\n                    <Link to=\"/\">\r\n                        <img className=\"GALimg\" src=\"https://www.goldenageliving.com/wp-content/uploads/2017/11/Goldenageliving-logo-web.jpg\" alt=\"mainImg\"></img>\r\n                    </Link>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React from \"react\";\nimport { FormBtn } from \"../components/Form\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Link } from 'react-router-dom'\nimport Header from \"../components/Header\"\nimport \"./home.css\"\n\nfunction Home({ logout }) {\n  return (\n    <div>\n      <Header />\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron data-aos=\"zoom-in\">\n            <h1>Welcome!</h1>\n            <hr></hr>\n            <ul className=\"homeUL text-left\">\n              <li>To begin a new assessment, click \"New Assessment\"</li>\n              <li>To view a list of clients who have completed assessments, click \"View Clients\"</li>\n            </ul>\n            <hr></hr>\n            <Row>\n              <Col size=\"sm-3\"></Col>\n              <Col size=\"sm-3\">\n                <Link to=\"/clientinput\">\n                  <button type=\"button\" className=\"btn btn-outline-success homeBtn\">New Assessment</button>\n                </Link>\n              </Col>\n              <Col size=\"sm-3\">\n                <Link to=\"/clients\">\n                  <button type=\"button\" className=\"btn btn-outline-success homeBtn\" >View Clients</button>\n                </Link>\n              </Col>\n              <Col size=\"sm-3\"></Col>\n\n            </Row>\n            <FormBtn\n              text=\"Logout\"\n              onClick={logout}\n              classes=\"btn-outline-success logoutBtn homeBtn\"\n            />\n          </Jumbotron>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { FormGroup, Input, Label, Small, FormBtn } from \"../../components/Form\";\nimport { Container } from \"../../components/Grid\";\nimport { Redirect } from 'react-router-dom'\nimport API from \"../../utils/API\";\nimport Header from \"../../components/Header\"\nimport \"./style.css\";\n\nclass ClientInput extends Component {\n    state = {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phone: \"\",\n        streetAddress: \"\",\n        aptUnitNum: \"\",\n        city: \"\",\n        state: \"\",\n        zip: \"\",\n        assessor: \"\",\n        audit: \"\",\n        dwelling: \"\",\n        gateCode: \"\",\n        clientAdded: false\n    };\n\n    addClient = event => {\n        event.preventDefault();\n        API.addClient({\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            phone: this.state.phone,\n            streetAddress: this.state.streetAddress,\n            aptUnitNum: this.state.aptUnitNum,\n            city: this.state.city,\n            state: this.state.state,\n            zip: this.state.zip,\n            assessor: this.state.assessor,\n            audit: this.state.audit,\n            dwelling: this.state.dwelling,\n            gateCode: this.state.gateCode\n        })\n            .then(res => {\n                this.setState({ clientAdded: true });\n                this.props.setClient(res.data)\n                console.log(\"client added\")\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value.trim()\n        });\n    };\n\n    render() {\n        if (!this.state.clientAdded) {\n            return (\n                <div>\n                    <Header />\n                    <Container classes=\"ClientInput\">\n                        <form>\n                            <FormGroup>\n                                <Label text=\"First Name\" />\n                                <Input\n                                    name=\"firstName\"\n                                    value={this.state.firstName}\n                                    onChange={this.handleInputChange}\n                                    type=\"firstName\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label text=\"Last Name\" />\n                                <Input\n                                    name=\"lastName\"\n                                    value={this.state.lastName}\n                                    onChange={this.handleInputChange}\n                                    type=\"lastName\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label text=\"Email\" />\n                                <Input\n                                    name=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.handleInputChange}\n                                    type=\"email\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label text=\"Phone\" />\n                                <Input\n                                    name=\"phone\"\n                                    value={this.state.phone}\n                                    onChange={this.handleInputChange}\n                                    type=\"phone\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label text=\"Street Address\" />\n                                <Input\n                                    name=\"streetAddress\"\n                                    value={this.state.streetAddress}\n                                    onChange={this.handleInputChange}\n                                    type=\"streetAddress\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label text=\"Apartment/Unit Number\" />\n                                <Input\n                                    name=\"aptUnitNum\"\n                                    value={this.state.aptUnitNum}\n                                    onChange={this.handleInputChange}\n                                    type=\"aptUnitNum\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label text=\"City\" />\n                                <Input\n                                    name=\"city\"\n                                    value={this.state.city}\n                                    onChange={this.handleInputChange}\n                                    type=\"city\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                {/* <Label text=\"State\" />\n                                <Input\n                                    name=\"state\"\n                                    value={this.state.state}\n                                    onChange={this.handleInputChange}\n                                    type=\"state\"\n                                /> */}\n\n                                <Label text=\"State\" />\n                                <div className=\"dropdown\">\n                                    <select className=\"form-control\" name=\"state\" value={this.state.state}\n                                        onChange={this.handleInputChange}\n                                        type=\"state\">\n                                        <option defaultValue=\"\" disabled selected>Select State</option>\n                                        <option>AK</option>\n                                        <option>AL</option>\n                                        <option>AR</option>\n                                        <option>AZ</option>\n                                        <option>CA</option>\n                                        <option>CO</option>\n                                        <option>CT</option>\n                                        <option>DE</option>\n                                        <option>FL</option>\n                                        <option>GA</option>\n                                        <option>HI</option>\n                                        <option>IA</option>\n                                        <option>ID</option>\n                                        <option>IL</option>\n                                        <option>IN</option>\n                                        <option>KS</option>\n                                        <option>KY</option>\n                                        <option>LA</option>\n                                        <option>MA</option>\n                                        <option>MD</option>\n                                        <option>ME</option>\n                                        <option>MI</option>\n                                        <option>MN</option>\n                                        <option>MO</option>\n                                        <option>MS</option>\n                                        <option>MT</option>\n                                        <option>NC</option>\n                                        <option>ND</option>\n                                        <option>NE</option>\n                                        <option>NH</option>\n                                        <option>NJ</option>\n                                        <option>NM</option>\n                                        <option>NV</option>\n                                        <option>NY</option>\n                                        <option>OH</option>\n                                        <option>OK</option>\n                                        <option>OR</option>\n                                        <option>PA</option>\n                                        <option>RI</option>\n                                        <option>SC</option>\n                                        <option>SD</option>\n                                        <option>TN</option>\n                                        <option>TX</option>\n                                        <option>UT</option>\n                                        <option>VA</option>\n                                        <option>VT</option>\n                                        <option>WA</option>\n                                        <option>WI</option>\n                                        <option>WV</option>\n                                        <option>WY</option>\n                                    </select>\n                                </div>\n\n                            </FormGroup>\n                            <FormGroup>\n                                <Label text=\"Zip\" />\n                                <Input\n                                    name=\"zip\"\n                                    value={this.state.zip}\n                                    onChange={this.handleInputChange}\n                                    type=\"zip\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label text=\"Assessor\" />\n                                <Input\n                                    name=\"assessor\"\n                                    value={this.state.assessor}\n                                    onChange={this.handleInputChange}\n                                    type=\"assessor\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label text=\"Audit\" />\n                                <Input\n                                    name=\"audit\"\n                                    value={this.state.audit}\n                                    onChange={this.handleInputChange}\n                                    type=\"audit\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                {/* <Label text=\"Dwelling Type\" />\n                                <Input\n                                    name=\"dwelling\"\n                                    value={this.state.dwelling}\n                                    onChange={this.handleInputChange}\n                                    type=\"dwelling\"\n                                /> */}\n\n                                <Label text=\"Dwelling Type\"/>\n                                <div className=\"dropdown\">\n                                    <select className=\"form-control\" name=\"dwelling\" value={this.state.dwelling}\n                                        onChange={this.handleInputChange}\n                                        type=\"dwelling\">\n                                        <option defaultValue=\"\" disabled selected>Select Dwelling Type</option>\n                                        <option>House</option>\n                                        <option>Condo</option>\n                                        <option>Town Home</option>\n                                        <option>Apartment</option>\n                                    </select>\n                                </div>\n\n                            </FormGroup>\n                            <FormGroup>\n                                <Label text=\"Gate Code\" />\n                                <Input\n                                    name=\"gateCode\"\n                                    value={this.state.gateCode}\n                                    onChange={this.handleInputChange}\n                                    type=\"gateCode\"\n                                />\n                            </FormGroup>\n                            {this.state.error ? <Small text={this.state.error} /> : \"\"}\n                            <FormBtn\n                                disabled={\n                                    this.state.firstName && this.state.lastName && this.state.email && this.state.phone && this.state.streetAddress && this.state.city && this.state.state && this.state.zip && this.state.assessor && this.state.dwelling && this.state.audit ? \"\" : \"disabled\"\n                                }\n                                text=\"Begin Assessment\"\n                                onClick={this.addClient}\n                                classes=\"btn-primary\"\n                            />\n                        </form>\n                    </Container>\n                </div>\n            );\n        } else {\n            return (\n                <Redirect to=\"/assessment\" />\n            )\n        }\n    }\n}\n\nexport default ClientInput;\n","import React, { Component } from \"react\";\r\nimport { FormGroup, Input, Label, Small, FormBtn } from \"../../components/Form\";\r\nimport { Container } from \"../../components/Grid\";\r\nimport API from \"../../utils/API\";\r\nimport \"./style.css\";\r\n\r\nclass QuestionInput extends Component {\r\n    state = {\r\n        section: \"\",\r\n        question: \"\"\r\n    };\r\n\r\n    inputQuestion = event => {\r\n        event.preventDefault();\r\n        API.inputQuestion({\r\n            section: this.state.section,\r\n            question: this.state.question\r\n        })\r\n            .then(\r\n                console.log(\"question added\")\r\n            )\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value.trim()\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container\r\n                classes=\"questionContainer\"\r\n            >\r\n                <form>\r\n                    <FormGroup>\r\n                        <Label text=\"section\" />\r\n                        <Input\r\n                            name=\"section\"\r\n                            value={this.state.section}\r\n                            onChange={this.handleInputChange}\r\n                            type=\"text\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label text=\"question\" />\r\n                        <Input\r\n                            name=\"question\"\r\n                            value={this.state.question}\r\n                            onChange={this.handleInputChange}\r\n                            type=\"question\"\r\n                        />\r\n                    </FormGroup>\r\n                    {this.state.error ? <Small text={this.state.error} /> : \"\"}\r\n                    <FormBtn\r\n                        disabled={\r\n                            this.state.section && this.state.question ? \"\" : \"disabled\"\r\n                        }\r\n                        text=\"Submit\"\r\n                        onClick={this.inputQuestion}\r\n                        classes=\"btn-primary\"\r\n                    />\r\n                </form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionInput;\r\n","import React from \"react\";\nimport \"./style.css\"\n\nclass AssessSection extends React.Component {\n    state = {\n        checked: false,\n    };\n\n\n    notApplicable = () => {\n\n        if (this.state.checked === false) {\n            this.setState({ checked: true })\n            console.log(\"Checked\")\n        } else {\n            this.setState({ checked: false })\n            console.log(\"Unchecked\")\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row section\" data-aos=\"fade-up\">\n                    <div className=\"col-sm-3\">\n                        <h3> {this.props.section} </h3>\n                    </div>\n                    <div className=\"col-sm-3 d-flex align-items-center\">\n                        <div className=\"row\">\n                            {this.props.showNAbox ? (\n                                <React.Fragment>\n                                    <div className=\"col-sm-1\">\n                                        <input type=\"checkbox\" onClick={this.notApplicable}></input>\n                                    </div>\n                                    <div className=\"col-sm d-flex align-items-center\">\n                                        <h5>N/A</h5>\n                                    </div>\n                                </React.Fragment>\n                            ) : (\"\")}\n                        </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                    </div>\n                </div>\n                <div className=\"row text-center secHead\" data-aos=\"fade-right\">\n                    <div className=\"col-sm-3\">Question</div>\n                    <div className=\"col-sm-3\">Response</div>\n                    <div className=\"col-sm-3\">Observation</div>\n                    <div className=\"col-sm-3\">Comment</div>\n                </div>\n                <hr className=\"secHr\"></hr>\n                <div className=\"questions\">\n                    {\n                        this.state.checked ? \"\" : this.props.children\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AssessSection","import React from \"react\";\nimport \"./style.css\"\n\nclass AssessQuestion extends React.Component {\n    render() {\n        return (\n            <div className=\"row text-center\" data-aos=\"fade-right\">\n                <div className=\"col-sm-3 resQ\">\n                    <p>{this.props.question}</p>\n                </div>\n\n                {this.props.response ? (\n                    <React.Fragment>\n                        <div className=\"col-sm-3\">\n                            <p>{this.props.response}</p>\n                        </div>\n                        <div className=\"col-sm-3\">\n                            <p>{this.props.observation}</p>\n                        </div>\n                        <div className=\"col-sm-3\">\n                            <p>{this.props.comment}</p>\n                        </div>\n                    </React.Fragment>\n                ) : (\n                        <React.Fragment>\n                            <div className=\"col-sm-3 dropdown\">\n                                <select\n                                    className=\"form-control\" name={`${this.props.section}-${this.props.id}-response`}>\n                                    <option defaultValue=\"\" disabled selected>Response</option>\n                                    <option>Yes</option>\n                                    <option>No</option>\n                                    <option>N/A</option>\n                                </select>\n                            </div>\n                            <div className=\"col-sm-3 form-group\">\n                                <input type=\"observation\" className=\"form-control\" id=\"observation\" placeholder=\"Observation\" name={`${this.props.section}-${this.props.id}-observation`}></input>\n                            </div>\n                            <div className=\"col-sm-3 form-group\">\n                                <input type=\"comment\" className=\"form-control\" id=\"comment\" placeholder=\"Comment\" name={`${this.props.section}-${this.props.id}-comment`}></input>\n                            </div>\n                        </React.Fragment>\n                    )}\n            </div>\n        );\n    }\n}\n\nexport default AssessQuestion","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport AssessSection from \"../../components/AssessSection\"\nimport AssessQuestion from \"../../components/AssessQuestion\"\nimport Header from \"../../components/Header\"\nimport Jumbotron from \"../../components/Jumbotron\";\nimport { Redirect } from 'react-router-dom'\nimport \"./style.css\"\n\nclass Assessment extends Component {\n    state = {\n        sections: [],\n        resultsSubmitted: false\n    };\n\n\n    buildAssessment = () => {\n        API.getSections()\n            .then(res => {\n                this.setState({ sections: res.data })\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        let responses = [];\n\n        for (let i = 0; i < event.target.length; i++) {\n\n            let question = {\n                ClientId: this.props.clientID,\n                SectionId: \"\",\n                QuestionId: \"\",\n                response: \"\",\n                observation: \"\",\n                comment: \"\"\n            }\n            let name = event.target[i].name\n            let splitName = name.split(\"-\")\n            let category = splitName[2]\n\n            if (name) {\n\n                if (category === \"response\") {\n                    question.response = event.target[i].value\n                }\n                if (category === \"observation\") {\n                    question.observation = event.target[i].value\n                }\n                if (category === \"comment\") {\n                    question.comment = event.target[i].value\n                }\n\n                question.SectionId = parseInt(splitName[0])\n                question.QuestionId = parseInt(splitName[1])\n                responses.push(question);\n            }\n        }\n\n        let submission = []\n\n        for (let i = 0; i < responses.length; i++) {\n\n            if (responses[i].response !== \"Response\" && responses[i].response !== \"\") {\n                responses[i].observation = responses[i + 1].observation\n                responses[i].comment = responses[i + 2].comment\n                submission.push(responses[i])\n            }\n            // else if ((responses[i].response === \"Response\" || responses[i].response === \"\") && responses[i].observation === \"\" && responses[i].comment === \"\") {\n            //     alert(\"you have unanswered responses\")\n            //     return\n            // }\n        }\n\n        for (let i = 0; i < submission.length; i++) {\n\n            API.submitAssessment({\n                ClientId: this.props.clientID,\n                SectionId: submission[i].SectionId,\n                QuestionId: submission[i].QuestionId,\n                response: submission[i].response,\n                observation: submission[i].observation,\n                comment: submission[i].comment\n            })\n                .then(res => {\n                    this.props.setResults(submission)\n                    this.setState({ resultsSubmitted: true })\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n    }\n\n\n    componentDidMount() {\n        this.buildAssessment()\n    }\n\n    render() {\n        if (!this.state.resultsSubmitted) {\n            return (\n                <div>\n                    <Header />\n                    {/* <row className=\"d-flex justify-content-center \">\n                        <img src=\"https://www.goldenageliving.com/wp-content/uploads/2017/11/Goldenageliving-logo-web.jpg\" alt=\"mainImg\"></img>\n                    </row> */}\n                    <Jumbotron>\n                        <div className=\"row\">\n                            <div className=\"col-sm\">\n                                <h3>Home Assessment</h3>\n                                <hr></hr>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-sm text-left\">\n                                <ul className=\"instructions\">\n                                    <li>\n                                        <p>Scroll down below to begin the assessment. Each question will have a response, observation, and comment.</p>\n                                    </li>\n                                    <li>\n                                        <p>Select a response for each question. If the responses \"Yes\" or \"No\" do not apply to the question, select \"N/A\" as your response.</p>\n                                    </li>\n                                    <li>\n                                        <p>Observations should include specific notes regarding the current question, e.g., \"The slope of the driveway is 20 degrees\" .</p>\n                                    </li>\n                                    <li>\n                                        <p>In the comments field, please add any additional notes regarding the section/question that may be relevant when summarizing the report.</p>\n                                    </li>\n                                    <li>\n                                        <p>If a section/questions are not applicable to this assessment, click the \"N/A\" checkbox to remove that section from the assessment. Uncheck the box to include them.</p>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </Jumbotron>\n                    <form onSubmit={this.handleSubmit}>\n                        {this.state.sections.map(section => (\n                            <AssessSection key={section.id} id={section.id} section={section.section} notApplicable={this.notApplicable} showNAbox={true}>\n                                {section.Questions.map(question => (\n                                    <AssessQuestion\n                                        key={question.id}\n                                        id={question.id}\n                                        section={question.SectionId}\n                                        question={question.question}\n                                        // response={\"yes\"}\n                                        className=\"questions\"\n                                    />\n                                ))}\n                            </AssessSection>\n                        ))}\n                        <button type=\"submit\" className=\"btn btn-primary btn-lg\">Submit Assessment</button>\n                    </form>\n                </div>\n            );\n        } else {\n            return (\n                <Redirect to=\"/confirmation\" />\n            )\n        }\n\n    }\n}\n\nexport default Assessment;\n\n    // handleInputChange = event => {\n    //     const { name, value } = event.target;\n    //     this.setState({\n    //         [name]: value.trim()\n    //     });\n    // };\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport \"./style.css\"\r\n\r\nclass ClientRow extends Component {\r\n\r\n    getClientInfo = () => {\r\n\r\n        const { id, firstName, lastName, email, phone, streetAddress, aptUnitNum, city, state, zip } = this.props\r\n\r\n        this.props.setClientResults([id, firstName, lastName, email, phone, streetAddress, aptUnitNum, city, state, zip])\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/clientresults\">\r\n                    <button type=\"button\" className=\"btn btn-outline-secondary clientBtn\" onClick={this.getClientInfo}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-1\"></div>\r\n                            <div className=\"col-sm-2\">\r\n                                <p> {this.props.lastName} </p>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                <p> {this.props.firstName} </p>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                <p> {this.props.city} </p>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                <p> {this.props.state} </p>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                <p> {this.props.created} </p>\r\n                            </div>\r\n                            <div className=\"col-sm-1\"></div>\r\n                        </div>\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ClientRow","import React, { Component } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport { Container } from \"../../components/Grid\";\r\nimport ClientRow from \"../../components/ClientRow\"\r\nimport Header from \"../../components/Header\"\r\nimport \"./style.css\"\r\n\r\nclass Clients extends Component {\r\n\r\n    state = {\r\n        clients: []\r\n    }\r\n\r\n    getClients = () => {\r\n        API.getClients()\r\n            .then(res => {\r\n                for (let i = 0; i < res.data.length; i++) {\r\n                    let createdString1 = res.data[i].createdAt.split(\":\")\r\n                    let createdString2 = createdString1[0].split(\"T\")\r\n                    let createdString3 = createdString2[0].split(\"-\")\r\n                    let year = parseInt(createdString3[0])\r\n                    let month = parseInt(createdString3[1])\r\n                    let day = parseInt(createdString3[2])\r\n                    let created = (month+\"/\"+(day-1)+\"/\"+year)\r\n                    res.data[i].createdAt = created\r\n                }\r\n                console.log(res.data)\r\n                this.setState({ clients: res.data })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getClients()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Container fluid>\r\n                    <div className=\"text-center\">\r\n                        <div className=\"row headings\">\r\n                            <div className=\"col-sm-1\"></div>\r\n                            <div className=\"col-sm-2\">\r\n                                <h3>Last Name</h3>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                <h3>First Name</h3>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                <h3>City</h3>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                <h3>State</h3>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                <h3>Date Added</h3>\r\n                            </div>\r\n                            <div className=\"col-sm-1\"></div>\r\n                        </div>\r\n                        <div className=\"clientBox\">\r\n                            {this.state.clients.map(client => (\r\n                                <ClientRow\r\n                                    key={client.id}\r\n                                    id={client.id}\r\n                                    firstName={client.firstName} lastName={client.lastName}\r\n                                    email={client.email}\r\n                                    phone={client.phone}\r\n                                    streetAddress={client.streetAddress}\r\n                                    aptUnitNum={client.aptUnitNum}\r\n                                    city={client.city}\r\n                                    state={client.state}\r\n                                    zip={client.zip}\r\n                                    created={client.createdAt}\r\n                                    setClientResults={this.props.setClientResults}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Clients","import React from \"react\";\n\nclass AssessSection extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                        <h3> {this.props.section} </h3>\n                    </div>\n                    <div className=\"col-sm-3\">\n                        <h4>Response</h4>\n                    </div>\n                    <div className=\"col-sm-3\">\n                        <h4>Observation</h4>\n                    </div>\n                    <div className=\"col-sm-3\">\n                        <h4>Comment</h4>\n                    </div>\n                </div>\n            {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default AssessSection","import React from \"react\";\r\n\r\nclass ResultQuestion extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4\">\r\n                    <p>{this.props.question}</p>\r\n                </div>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResultQuestion","import React from \"react\";\n\nclass ResultResponses extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                        <p>{this.props.response}</p>\n                    </div>\n                    <div className=\"col-sm-3\">\n                        <p>{this.props.observation}</p>\n                    </div>\n                    <div className=\"col-sm-3\">\n                        <p>{this.props.comment}</p>\n                    </div>\n                    {/* <div className=\"col-sm-6\">\n                    </div> */}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ResultResponses","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Header from \"../../components/Header\"\nimport AssessQuestion from \"../../components/AssessQuestion\"\nimport AssessSection from \"../../components/AssessSection\"\nimport \"./style.css\"\n\nclass ClientResults extends Component {\n\n    state = {\n        sections: []\n    }\n\n    resultsArr = []\n\n    buildClientResults = () => {\n\n        let ClientId = this.props.clientResults[0]\n\n        API.getClientResults(ClientId)\n            .then(res => {\n                this.setState({ sections: res.data })\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\n    }\n\n    componentDidMount() {\n        this.buildClientResults()\n    }\n\n    render() {\n        return (\n            <div>\n                <Header/>\n                {this.state.sections.map((section, index) => (\n                    <React.Fragment>\n                        {console.log(section.SectionId === this.state.sections[index].SectionId)}\n                        {index > 0 && section.SectionId === this.state.sections[index - 1].SectionId ? (\n                            section.Section.Questions.map(question => (\n                                question.id === section.QuestionId ? (<AssessQuestion\n                                    key={question.id}\n                                    id={question.id}\n                                    section={question.SectionId}\n                                    question={question.question}\n                                    response={section.response}\n                                    observation={section.observation}\n                                    comment={section.comment}\n                                    className=\"questions\"\n                                />) : (\"\")\n                            ))\n                        ) : (\n                            <AssessSection key={section.SectionId} id={section.SectionId} section={section.Section.section} showNAbox={false}>\n                                {section.Section.Questions.map(question => (\n                                    question.id === section.QuestionId ? (\n                                        <AssessQuestion\n                                            key={question.id}\n                                            id={question.id}\n                                            section={question.SectionId}\n                                            question={question.question}\n                                            response={section.response}\n                                            observation={section.observation}\n                                            comment={section.comment}\n                                            className=\"questions\"\n                                        />\n                                    ) : (\"\")\n                                ))}\n                            </AssessSection>\n                        )}\n                    </React.Fragment>\n                ))}\n            </div>\n        )\n    }\n\n}\n\nexport default ClientResults","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Header from \"../../components/Header\"\nimport ResultSection from \"../../components/ResultSection\"\nimport ResultQuestion from \"../../components/ResultQuestion\"\nimport ResultResponses from \"../../components/ResultResponses\"\n\nclass Results extends Component {\n\n    state = {\n        sections: []\n    }\n\n    resultArry = this.props.results\n    resultSections = []\n    fullResults = []\n\n    buildResults = () => {\n\n        API.getSections()\n            .then(res => {\n                this.setState({ sections: res.data })\n                const { sections } = this.state\n                for (let i = 0; i < this.resultArry.length; i++) {\n                    let sectionID = this.resultArry[i].SectionId\n                    for (let j = 0; j < sections.length; j++) {\n                        if (sectionID === sections[j].id) {\n                            this.resultSections.push(sections[j])\n                            for (let k = 0; k < this.resultSections.length; k++) {\n                                if (this.resultSections[k + 1] === this.resultSections[k]) {\n                                    this.resultSections.splice(k + 1)\n                                }\n                            }\n                        }\n                    }\n                }\n                for (let i = 0; i < this.resultSections.length; i++) {\n                    let resultsObj = {\n                        section: \"\",\n                        questions: []\n                    }\n                    resultsObj.section = this.resultSections[i].section\n                    for (let j = 0; j < this.resultSections[i].Questions.length; j++) {\n                        for (let k = 0; k < this.resultArry.length; k++) {\n                            if (this.resultArry[k].QuestionId === this.resultSections[i].Questions[j].id) {\n                                let questObj = {\n                                    question: \"\",\n                                    responses: []\n                                }\n                                questObj.question = this.resultSections[i].Questions[j].question\n                                let resObj = {\n                                    response: \"\",\n                                    observation: \"\",\n                                    comment: \"\"\n                                }\n                                resObj.response = this.resultArry[k].response\n                                resObj.observation = this.resultArry[k].observation\n                                resObj.comment = this.resultArry[k].comment\n                                questObj.responses.push(resObj)\n                                resultsObj.questions.push(questObj)\n                            }\n                        }\n                    }\n                    this.fullResults.push(resultsObj)\n                }\n\n                console.log(this.fullResults)\n\n                this.setState({ sections: this.fullResults })\n\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    componentDidMount() {\n        this.buildResults()\n    }\n\n    render() {\n        return (\n            <div>\n                <Header />\n                {this.fullResults.map(section => (\n                    <ResultSection section={section.section}>\n                        {section.questions.map(question => (\n                            <ResultQuestion question={question.question}>\n                                {question.responses.map(response => (\n                                    <ResultResponses\n                                        response={response.response}\n                                        observation={response.observation}\n                                        comment={response.comment}\n                                    />\n                                ))}\n                            </ResultQuestion>\n                        ))}\n                    </ResultSection>\n                ))}\n            </div>\n        );\n    }\n\n}\n\nexport default Results;","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport Header from \"../../components/Header\"\r\nimport Jumbotron from \"../../components/Jumbotron\"\r\nimport \"./style.css\"\r\n\r\nclass Confirmation extends Component {\r\n\r\n    state = {\r\n        redirect: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.id = setTimeout(() => this.setState({ redirect: true }), 4000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.id)\r\n    }\r\n\r\n    render() {\r\n        return this.state.redirect\r\n            ? <Redirect to=\"/\" />\r\n            :\r\n            <div>\r\n                <Header />\r\n                <Jumbotron>\r\n                    <div className=\"jContent\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm\">\r\n                                <h3>Assessment Submitted</h3>\r\n                            </div>\r\n                        </div>\r\n                        <hr></hr>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm\">\r\n                                <p>You will be redirected back to the home page shortly</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </div>\r\n    }\r\n\r\n    // render() {\r\n    //     return (\r\n    //         <div>\r\n    //             <Header />\r\n    //             <Jumbotron>\r\n    //                 <div className=\"jContent\">\r\n    //                     <div className=\"row\">\r\n    //                         <div className=\"col-sm\">\r\n    //                             <h3>Assessment Submitted</h3>\r\n    //                         </div>\r\n    //                     </div>\r\n    //                     <hr></hr>\r\n    //                     <div className=\"row\">\r\n    //                         <div className=\"col-sm\">\r\n    //                             <p>You will be redirected back to the home page shortly</p>\r\n    //                         </div>\r\n    //                     </div>\r\n    //                 </div>\r\n    //             </Jumbotron>\r\n    //         </div>\r\n    //     )\r\n\r\n    // }\r\n}\r\n\r\nexport default Confirmation","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport API from \"./utils/API\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Home from \"./pages/Home\";\nimport QuestionInput from \"./pages/QuestionInput\"\nimport ClientInput from \"./pages/ClientInput\"\nimport Assessment from \"./pages/Assessment\"\nimport Clients from \"./pages/Clients\"\nimport Results from \"./pages/Results\";\nimport ClientResults from \"./pages/ClientResults\"\nimport Confirmation from \"./pages/Confirmation\"\nimport \"./index.css\"\nimport AOS from 'aos'\n\n\nclass App extends Component {\n  state = {\n    authorized: false,\n    client: {},\n    results: [],\n    clientResults: [],\n    homeActive: false\n  };\n\n  componentDidMount() {\n    this.isAuthorized();\n    AOS.init()\n  }\n\n  isAuthorized = () => {\n    API.isAuthorized()\n      .then(res => {\n        this.setState({\n          authorized: res.data.message ? false : true\n        })\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ authorized: false });\n      });\n  };\n\n  logout = () => {\n    API.logout()\n      .then(res => {\n        console.log(\"logged out\");\n        this.isAuthorized();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  setClient = client => {\n    this.setState({ client: client })\n  }\n\n  setResults = results => {\n    this.setState({ results: results })\n  }\n\n  setClientResults = results => {\n    this.setState({ clientResults: results })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"mainApp\">\n          {/* <Switch>\n            <Route exact path=\"/\">\n              {this.state.authorized ? (\n                <Home logout={this.logout} />\n              ) : (\n                  <Redirect to=\"/login\" />\n                )}\n            </Route>\n            <Route exact path=\"/login\">\n              {this.state.authorized ? (\n                <Redirect to=\"/\" />\n              ) : (\n                  <Login isAuthorized={this.isAuthorized} />\n                )}\n            </Route>\n            <Route exact path=\"/register\">\n              {this.state.authorized ? (\n                <Redirect to=\"/\" />\n              ) : (\n                  <Register isAuthorized={this.isAuthorized} />\n                )}\n            </Route>\n            <Route>\n              <Redirect to=\"/\" />\n            </Route>\n          </Switch> */}\n\n          <Route exact path=\"/\">\n            <Home logout={this.logout} />\n          </Route>\n          <Route exact path=\"/clientinput\">\n            <ClientInput setClient={this.setClient} client={this.state.client} />\n          </Route>\n          <Route exact path=\"/clients\">\n            <Clients setClientResults={this.setClientResults} />\n          </Route>\n          <Route exact path=\"/assessment\">\n            <Assessment setResults={this.setResults} clientID={this.state.client.id} />\n          </Route>\n          <Route exact path=\"/confirmation\">\n            <Confirmation />\n          </Route>\n          <Route exact path=\"/clientresults\">\n            <ClientResults clientResults={this.state.clientResults} />\n          </Route>\n\n\n          {/* <Route exact path=\"/results\">\n            <Results results={this.state.results} />\n          </Route> */}\n\n\n          {/* <Route exact path=\"/\">\n            <QuestionInput inputQuestion={this.inputQuestion}></QuestionInput>\n          </Route> */}\n\n        </div>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}